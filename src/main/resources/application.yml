spring:
  application:
    name: marky

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  config:
    import: optional:file:.env[.properties]

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true


  datasource:
    url: jdbc:postgresql://localhost:5432/marky
    username: postgres
    password: postgres

    hikari:
      connection-init-sql: CREATE EXTENSION IF NOT EXISTS vector

  ai:
    model:
      chat: openai
      embedding: ollama

    openai:
      api-key: ${OPEN_AI_API_KEY}
      chat:
        options:
          model: gpt-4o
          temperature: 0.4
          internal-tool-execution-enabled: true
          # max-tokens: 1024

    ollama:
      base-url: http://localhost:11434/
      embedding:
        options:
          model: nomic-embed-text
          keep-alive: 5m


    vectorstore:
      pgvector:
        dimensions: 768
        initialize-schema: false
        max-document-batch-size: 10000
        index-type: hnsw
        distance-type: cosine-distance
        table-name: vector_store
#        remove-existing-vector-store-table: true



  data:
    redis:
      host: localhost
      port: 6379


jwt:
#  secret:
#    access: ${JWT_SECRET_ACCESS}
#    refresh: ${JWT_SECRET_REFRESH}

  duration:
    access: 10000      # 5분 = 1000 * 60 * 5
    refresh: 604800000  # 7일 = 1000 * 60 * 60 * 24 * 7


logging:
  level:
    org.springframework.ai: DEBUG

