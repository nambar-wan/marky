plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.groom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.ai:spring-ai-bom:1.0.0")
	}
}


ext {
	set('springAiVersion', "1.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.ai:spring-ai-starter-model-openai'
	implementation 'org.springframework.ai:spring-ai-rag'
	implementation 'org.springframework.ai:spring-ai-client-chat'
	implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
	implementation 'org.springframework.ai:spring-ai-advisors-vector-store'


	// implementation 'org.bsc.langgraph4j:langgraph4j-core:1.5.13'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'


	// data jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//implementation 'org.springframework.ai:spring-ai-advisors-vector-store'


	// postgresql, pgvector
	implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'
	runtimeOnly 'org.postgresql:postgresql'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}


tasks.named('test') {
	useJUnitPlatform()
}
